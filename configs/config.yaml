# HARDEND Security Assessment Configuration
# Enterprise Linux Security Hardening Framework

application:
  name: "hardend"
  version: "2.0.0"
  description: "Linux Security Hardening Assessment Tool"

# Kernel security parameters to assess
kernel_parameters:
  - parameter: "net.ipv4.ip_forward"
    expected: "0"
    severity: "HIGH"
    description: "Disable IP forwarding to prevent routing attacks"
    references: ["CIS 3.1.1", "NIST SC-7"]
    exploitable: true

  - parameter: "kernel.randomize_va_space"
    expected: "2"
    severity: "CRITICAL"
    description: "Enable Address Space Layout Randomization (ASLR)"
    references: ["CIS 1.5.3"]
    exploitable: true

  - parameter: "net.ipv4.tcp_syncookies"
    expected: "1"
    severity: "HIGH"
    description: "Enable TCP SYN flood protection"
    references: ["CIS 3.2.8"]
    exploitable: true

# Service security configuration
services:
  # Services that should NOT be running
  prohibited_services:
    - name: "telnet"
      severity: "CRITICAL"
      description: "Unencrypted remote access protocol"
      exploitable: true

    - name: "rsh"
      severity: "CRITICAL"
      description: "Remote shell daemon with weak authentication"
      exploitable: true

    - name: "ftp"
      severity: "HIGH"
      description: "Unencrypted file transfer protocol"
      exploitable: true

  # Services that should be running for security
  required_services:
    - name: "sshd"
      severity: "HIGH"
      description: "Secure Shell daemon for encrypted remote access"

    - name: "auditd"
      severity: "MEDIUM"
      description: "System audit daemon for security logging"

# SSH security configuration checks
# NOTE: The current ssh.go file uses hard-coded rules.
# A future improvement is to make it read from this section.
ssh_security:
  config_file: "/etc/ssh/sshd_config"
  parameters:
    - parameter: "Protocol"
      expected: "2"
      severity: "CRITICAL"
      description: "SSH protocol version 2 only"
      exploitable: true

    - parameter: "PermitRootLogin"
      expected: "no"
      severity: "CRITICAL"
      description: "Disable direct root SSH login"
      exploitable: true

    - parameter: "PasswordAuthentication"
      expected: "no"
      severity: "HIGH"
      description: "Disable password-based authentication"
      exploitable: true

# Filesystem security checks
filesystem:
  # Mount points requiring security options
  secure_mounts:
    "/tmp":
      required_options: ["nosuid", "noexec", "nodev"]
      severity: "HIGH"

    "/var/tmp":
      required_options: ["nosuid", "noexec", "nodev"]
      severity: "HIGH"

    "/home":
      required_options: ["nosuid", "nodev"]
      severity: "MEDIUM"

  # Dangerous filesystem types to detect
  dangerous_filesystems:
    - "cramfs"
    - "freevxfs"
    - "jffs2"
    - "hfs"
    - "hfsplus"
    - "squashfs"
    - "udf"

# Output configuration
output:
  # Format: table, json, html
  default_format: "table"
  include_passed: false
  show_exploitable_only: false
  verbose_remediation: true

# Scanning configuration
scanning:
  stealth_mode: false
  advanced_analysis: true # Note: 'advanced' logic was removed from ssh.go for simplicity
  deep_scan: true
  skip_harmless: false

# Security modules to scan
scan_modules:
  kernel: true
  services: true
  ssh: true
  filesystem: true
  network: false        # Future work
  users: false          # Future work
  permissions: false    # Future work
  suid: false           # Future work
  packages: false       # Future work
  logs: false           # Future work
  firewall: false       # Future work
  selinux: false        # Future work
  cron: false           # Future work
  boot: false           # Future work

# Reporting settings
reporting:
  include_system_info: true
  show_banner: true
  executive_summary: true
  technical_details: true
  remediation_priority: true